version: '3.5'
services:
  nginx:
    container_name: nginx
    image: nginx
    ports:
      - 8080:8080
    network_mode: "host"  
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  db:
    container_name: postgres
    image: postgres:latest
    env_file: ./db/database.conf
    ports:
      - 5432:5432  
    volumes:
      - ./db/data:/var/lib/postgresql

  chainer:
    build:
      context: krakend-smev
      dockerfile: Dockerfile
    container_name: chainer
    network_mode: "host"
    env_file: ./chainer/app.conf
    volumes:
      - ./chainer:/etc/krakend
    ports:
      - 8090:8090
    command: [ "run", "-c", "/etc/krakend/config.json" ]

  json_2_xml:
    build:
      context: json2xml-transformer
      dockerfile: Dockerfile
    container_name: json_2_xml
    ports:
      - 5001:5000
    depends_on:
      - chainer

  record_repository:
    build:
      context: record-repository
      dockerfile: Dockerfile
    container_name: record_repository
    env_file: ./record-repository/app.conf
    ports:
      - 5002:5000
    depends_on:
      - chainer
      - db
  file_repository:
    build:
      context: file-repository
      dockerfile: Dockerfile
    container_name: file_repository
    env_file: ./file-repository/app.conf
    volumes:
      - ./file-repository/storage/:/app/storage/
    ports:
      - 5004:5000
    depends_on:
      - chainer
      - redis
      - db

  ftp_worker:
    build:
      context: file-repository
      dockerfile: Dockerfile.worker
    container_name: ftp_worker
    env_file: ./file-repository/app.conf
    volumes:
      - ./file-repository/storage/:/app/storage/
    depends_on:
      - file_repository
      - redis
  
  redis:
    image: redis:4.0.6-alpine
    container_name: redis
    ports:
      - "6378:6379"
    volumes:
      - ./redis:/data


  smev_connector:
    build:
      context: smev-connector
      dockerfile: Dockerfile
    container_name: smev_connector
    env_file: ./smev-connector/app.conf
    ports:
      - 5003:5003
    network_mode: "host"
    command: uvicorn server:app --host 0.0.0.0 --port 5003
    depends_on:
      - chainer
      - db

  redoc:
    image: redocly/redoc
    container_name: redoc
    ports:
      - 5080:80
    volumes:
      - ./redoc:/usr/share/nginx/html/swagger/
    env_file: ./redoc/app.conf
    depends_on:
      - chainer